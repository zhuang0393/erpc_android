/*
 * Generated by erpcgen 1.12.0 on Sat Jun 22 14:36:07 2024.
 *
 * AUTOGENERATED - DO NOT EDIT
 */


#include "c_helloworld_client.h"
#include "helloworld_client.hpp"
#include "erpc_manually_constructed.hpp"

using namespace erpc;
using namespace std;
using namespace erpcShim;


#if ERPC_ALLOCATION_POLICY == ERPC_ALLOCATION_POLICY_DYNAMIC
helloworld_client *s_helloworld_client = nullptr;
#else
ERPC_MANUALLY_CONSTRUCTED_STATIC(helloworld_client, s_helloworld_client);
#endif

binary_t * hello(const binary_t * txInput)
{
    binary_t * result = NULL;
    result = s_helloworld_client->hello(txInput);

    return result;
}

void inithelloworld_client(erpc_client_t client)
{
#if ERPC_ALLOCATION_POLICY == ERPC_ALLOCATION_POLICY_DYNAMIC
    erpc_assert(s_helloworld_client == nullptr);
    s_helloworld_client = new helloworld_client(reinterpret_cast<ClientManager *>(client));
#else
    erpc_assert(!s_helloworld_client.isUsed());
    s_helloworld_client.construct(reinterpret_cast<ClientManager *>(client));
#endif
}

void deinithelloworld_client(void)
{
#if ERPC_ALLOCATION_POLICY == ERPC_ALLOCATION_POLICY_DYNAMIC
    if (s_helloworld_client != nullptr)
    {
        delete s_helloworld_client;
        s_helloworld_client = nullptr;
    }
#else
    s_helloworld_client.destroy();
#endif
}
